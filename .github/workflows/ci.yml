name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: 45 12 * * *

env:
  POETRY_VIRTUALENVS_IN_PROJECT: 1
  IMAGE_NAME: girade/splat

jobs:

  type_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          pip install --upgrade poetry
          poetry install
      - run: poetry run mypy --config-file pyproject.toml splat/ tests/

  code_format_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          pip install --upgrade poetry
          poetry install
      - run: poetry run bandit -r splat/ tests/

  code_style_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          pip install --upgrade poetry
          poetry install
      - run: poetry run ruff check splat/ tests/

  bandit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          pip install --upgrade poetry
          poetry install
      - run: poetry run bandit -r splat/ tests/

  dependency_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pip install --upgrade poetry pip-audit poetry-plugin-export
      - run: |
          poetry export --without-hashes -o requirements.txt
          pip-audit -r requirements.txt

  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          pip install --upgrade poetry
          poetry install
      - run: poetry run python -m unittest discover tests


  build_push_image:
    runs-on: ubuntu-latest
    needs:
      - code_style_check
      - code_format_check
      - type_checks
      - bandit
      - dependency_scan
      - unit_tests
    outputs:
      image_latest:  ${{ steps.build.outputs.image_latest }}
      image_major:   ${{ steps.build.outputs.image_major }}
      image_version: ${{ steps.build.outputs.image_version }}
    steps:
      - uses: actions/checkout@v4
      - id: build
        uses: ./.github/actions/build-and-push-image
        with:
          docker_username: ${{ secrets.DOCKER_USERNAME }}
          docker_password: ${{ secrets.DOCKER_PASSWORD }}
          image_name: ${{ env.IMAGE_NAME }}

  system_tests:
    runs-on: ubuntu-latest
    needs: build_push_image
    steps:
      - uses: actions/checkout@v4

      - name: Debug image_version
        run: echo "will test â†’ ${{ needs.build_push_image.outputs.image_version }}"

      - uses: ./.github/actions/system-tests
        with:
          image_version:                     ${{ needs.build_push_image.outputs.image_version }}
          system_test_github_access_token:    ${{ secrets.SYSTEM_TEST_GITHUB_ACCESS_TOKEN }}
          system_test_gitlab_access_token:    ${{ secrets.SYSTEM_TEST_GITLAB_ACCESS_TOKEN }}
          bot_test_teams_webhook_url_general: ${{ secrets.BOT_TEST_TEAMS_WEBHOOK_URL_GENERAL }}